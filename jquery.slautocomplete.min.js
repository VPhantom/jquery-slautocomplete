/**
 * jQuery Autocomplete
 *
 * My take on using native client-side widgets for autocomplete behavior.
 *
 * Usage:
 *
 * $('select.autocomplete').autocomplete();
 *
 * Optionally, some configuration options can be specified to override
 * defaults, shown in this example:
 *
 * $('select.autocomplete').autocomplete({
 *   width: '16em',
 *   max_hits: 100,
 *   prefix: false  // Set true to match only the exact beginning instead of anywhere
 * });
 *
 * @package   jquery.autocomplete
 * @author    Stéphane Lavergne <http://www.imars.com/>
 * @copyright 2013 Stéphane Lavergne
 * @license   http://www.gnu.org/licenses/lgpl-3.0.txt  GNU LGPL version 3
 */
(function(t){"use strict";t.fn.autocomplete=function(e){var o="16em",p=100,i=!1;return e&&(e.width&&(o=e.width),e.max_hits&&(p=e.max_hits),e.prefix&&(i=!0)),p++,this.each(function(){function e(t,e){var o=t.find("option").filter(":selected"),p=null,i=null;o.length>0&&(i=t.parent().find("input[name=__input_"+t.prop("name")+"]"),p=o.first(),o.not(p).prop("selected",!1),t.prop("__autocomplete_selected",!0),i.prop("value",p.text()),e&&(t.prop("__autocomplete_focus_select",!1),i.focus(),setTimeout(function(){t.hide()},300)))}var c=t(this).clone();t(this).hide().wrap('<div style="display: inline-block;" />').before('<input type="text" autocomplete="off" style="width: '+o+';" name="__input_'+t(this).prop("name")+'" /><br />').prop("multiple",!0).prop("size",10).css("position","absolute").css("z-index","1000").css("width",o).css("margin","0px").css("padding","0px").prop("__autocomplete_src",c).prop("__autocomplete_hits",0).prop("__autocomplete_selected",!1).prop("__autocomplete_focus_input",!1).prop("__autocomplete_focus_select",!1).blur(function(){var e=t(this);e.prop("__autocomplete_focus_select",!1),setTimeout(function(){e.prop("__autocomplete_focus_input")||e.hide()},300)}).focus(function(){var e=t(this);e.prop("__autocomplete_focus_select",!0)}).keyup(function(o){var p=t(this);13===o.which||38===o.which||40===o.which?e(p,13===o.which):27===o.which&&(p.prop("__autocomplete_focus_select",!1).parent().find("input[name=__input_"+t(this).prop("name")+"]").focus(),setTimeout(function(){p.hide()},300))}).click(function(){e(t(this),!0)}).change(function(){e(t(this),!1)}),t(this).parent().find("input[name=__input_"+t(this).prop("name")+"]").keyup(function(o){var c=t(this).prop("value")||"",n=t(this).parent().find("select"),s=n.find("option"),_=0;c.length>0?40===o.which?(n.show().focus().prop("__autocomplete_focus_select",!0),0===s.filter(":selected").length&&(s.first().prop("selected",!0),e(n,!1))):(n.hide().empty().prop("__autocomplete_selected",!1),n.prop("__autocomplete_src").find("option").each(function(){var e=t(this),o=e.text().toUpperCase().search(c.toUpperCase());(i?0===o:o>=0)&&(_++,p>_?n.append(e.clone()):_===p&&n.append('<option disabled="disabled">...</option>')),_>0&&n.prop("size",Math.min(10,_)).show()}),n.prop("__autocomplete_hits",_)):n.hide()}).focus(function(){var e=t(this).parent().find("select");e.prop("__autocomplete_focus_input",!0),e.prop("__autocomplete_hits")>0&&!e.prop("__autocomplete_selected")&&t(this).parent().find("select").show()}).blur(function(){var e=t(this).parent().find("select");e.prop("__autocomplete_focus_input",!1),setTimeout(function(){e.prop("__autocomplete_focus_select")||e.hide()},300)})})}})(jQuery);